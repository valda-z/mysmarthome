@model MySmartHomeCore.Models.SmartHomeConfig
@{
    ViewBag.Title = "Setting";
    List<SelectListItem> tempList = new List<SelectListItem>();
    {
        var i = -100;
        var itm = new SelectListItem();
        itm.Value = i.ToString();
        itm.Text = i.ToString();
        itm.Selected = (((int)Model.dogontemp) == i);
        tempList.Add(itm);
    }
    for (int i = 0; i < 16; i++)
    {
        var itm = new SelectListItem();
        itm.Value = i.ToString();
        itm.Text = i.ToString();
        itm.Selected = (((int)Model.dogontemp) == i);
        tempList.Add(itm);
    }
    List<SelectListItem> minuteList = new List<SelectListItem>();
    for (int i = 1; i < 30; i++)
    {
        var itm = new SelectListItem();
        itm.Value = i.ToString();
        itm.Text = i.ToString();
        minuteList.Add(itm);
    }
    //list for Christmas LEDs
    for (int i = 1 * 60; i < 8 * 60; i += 60)
    {
        var itm = new SelectListItem();
        itm.Value = i.ToString();
        itm.Text = i.ToString();
        minuteList.Add(itm);
    }

    List<SelectListItem> hourList = new List<SelectListItem>();
    for (int i = 0; i < 24; i++)
    {
        var itm = new SelectListItem();
        itm.Value = string.Format("{0:00}:00", i);
        itm.Text = string.Format("{0:00}:00", i);
        hourList.Add(itm);
    }
}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("Setting", "Home", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
                    <h4>My Smart Home Setting</h4>
                    <hr />
                    @Html.ValidationSummary("", new { @class = "text-danger" })
                                    <div class="form-group">
                                        @Html.Label("dogontemp", "Dog House Temperature", new { @class = "col-md-2 control-label" })
                                        <div class="col-md-10">
                                            @Html.DropDownList("dogontemp", tempList, new { @class = "form-control" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.Label("irrigationOn", "Irrigation ON", new { @class = "col-md-2 control-label" })
                                        <div class="col-md-10">
                                            @Html.CheckBox("irrigationOn", Model.irrigationOn, new { @class = "form-control" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.Label("christmasOn", "Christmas ON", new { @class = "col-md-2 control-label" })
                                        <div class="col-md-10">
                                            @Html.CheckBox("christmasOn", Model.christmasOn, new { @class = "form-control" })
                                        </div>
                                    </div>
                                    if (Model.wateritems.Length >= 1)
                                    {
                                        <div class="form-group">
                                            @Html.Label("irrigation1", "Irrigation 1", new { @class = "col-md-2 control-label" })
                                            <div class="col-md-2">
                                                @Html.DropDownList("irrigation1", new SelectList(hourList, "Value", "Text", Model.wateritems[0].starthour), new { @class = "form-control" })
                                            </div>
                                            <div class="col-md-1">
                                                @Html.DropDownList("irrigation1m", new SelectList(minuteList, "Value", "Text", (Model.wateritems[0].intervalsec / 60).ToString()), new { @class = "form-control" })
                                            </div>
                                        </div>
                                    }
                                    if (Model.wateritems.Length >= 2)
                                    {
                                        <div class="form-group">
                                            @Html.Label("irrigation2", "Irrigation 2", new { @class = "col-md-2 control-label" })
                                            <div class="col-md-2">
                                                @Html.DropDownList("irrigation2", new SelectList(hourList, "Value", "Text", Model.wateritems[1].starthour), new { @class = "form-control" })
                                            </div>
                                            <div class="col-md-1">
                                                @Html.DropDownList("irrigation2m", new SelectList(minuteList, "Value", "Text", (Model.wateritems[1].intervalsec / 60).ToString()), new { @class = "form-control" })
                                            </div>
                                        </div>
                                    }
                                    <div class="form-group">
                                        <div class="col-md-offset-2 col-md-10">
                                            <input type="submit" class="btn btn-primary" value="Submit" />
                                        </div>
                                    </div>
                                }






